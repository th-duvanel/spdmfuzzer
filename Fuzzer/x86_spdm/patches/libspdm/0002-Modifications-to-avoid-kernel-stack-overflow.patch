From feea9efc89ec17dd15c631c70b92d1af73295b09 Mon Sep 17 00:00:00 2001
From: ralves <myeyeismadeofglass@gmail.com>
Date: Thu, 7 Oct 2021 15:51:42 -0300
Subject: [PATCH 2/4] Modifications to avoid kernel stack overflow

---
 library/spdm_common_lib/crypto_service.c      | 14 ++++----
 .../spdm_common_lib/crypto_service_session.c  | 36 +++++++++----------
 library/spdm_requester_lib/challenge.c        |  2 +-
 library/spdm_requester_lib/encap_request.c    |  4 +--
 library/spdm_requester_lib/get_certificate.c  |  4 +--
 library/spdm_requester_lib/key_exchange.c     |  4 +--
 library/spdm_requester_lib/send_receive.c     |  4 +--
 library/spdm_responder_lib/communication.c    |  4 +--
 library/spdm_responder_lib/receive_send.c     |  2 +-
 .../spdm_secured_message_lib/encode_decode.c  |  2 +-
 library/spdm_transport_mctp_lib/common.c      |  8 ++---
 11 files changed, 42 insertions(+), 42 deletions(-)

diff --git a/library/spdm_common_lib/crypto_service.c b/library/spdm_common_lib/crypto_service.c
index 39d04d0..d7e0cdf 100644
--- a/library/spdm_common_lib/crypto_service.c
+++ b/library/spdm_common_lib/crypto_service.c
@@ -162,7 +162,7 @@ boolean spdm_calculate_m1m2(IN void *context, IN boolean is_mut,
 	return_status status;
 	uint32 hash_size;
 	uint8 hash_data[MAX_HASH_SIZE];
-	large_managed_buffer_t m1m2;
+	static large_managed_buffer_t m1m2;
 
 	spdm_context = context;
 
@@ -469,7 +469,7 @@ boolean spdm_generate_challenge_auth_signature(IN spdm_context_t *spdm_context,
 {
 	boolean result;
 	uintn signature_size;
-	uint8 m1m2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 m1m2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn m1m2_buffer_size;
 
 	m1m2_buffer_size = sizeof(m1m2_buffer);
@@ -573,7 +573,7 @@ boolean spdm_verify_challenge_auth_signature(IN spdm_context_t *spdm_context,
 	void *context;
 	uint8 *cert_chain_data;
 	uintn cert_chain_data_size;
-	uint8 m1m2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 m1m2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn m1m2_buffer_size;
 
 	m1m2_buffer_size = sizeof(m1m2_buffer);
@@ -698,12 +698,12 @@ spdm_generate_measurement_summary_hash(IN spdm_context_t *spdm_context,
 				       IN uint8 measurement_summary_hash_type,
 				       OUT uint8 *measurement_summary_hash)
 {
-	uint8 measurement_data[MAX_SPDM_MEASUREMENT_RECORD_SIZE];
+	static uint8 measurement_data[MAX_SPDM_MEASUREMENT_RECORD_SIZE];
 	uintn index;
 	spdm_measurement_block_dmtf_t *cached_measurment_block;
 	uintn measurment_data_size;
 	uintn measurment_block_size;
-	uint8 device_measurement[MAX_SPDM_MEASUREMENT_RECORD_SIZE];
+	static uint8 device_measurement[MAX_SPDM_MEASUREMENT_RECORD_SIZE];
 	uint8 device_measurement_count;
 	uintn device_measurement_size;
 	boolean ret;
@@ -827,7 +827,7 @@ boolean spdm_generate_measurement_signature(IN spdm_context_t *spdm_context,
 {
 	uintn signature_size;
 	boolean result;
-	uint8 l1l2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 l1l2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn l1l2_buffer_size;
 
 	l1l2_buffer_size = sizeof(l1l2_buffer);
@@ -866,7 +866,7 @@ boolean spdm_verify_measurement_signature(IN spdm_context_t *spdm_context,
 	void *context;
 	uint8 *cert_chain_data;
 	uintn cert_chain_data_size;
-	uint8 l1l2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 l1l2_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn l1l2_buffer_size;
 
 	l1l2_buffer_size = sizeof(l1l2_buffer);
diff --git a/library/spdm_common_lib/crypto_service_session.c b/library/spdm_common_lib/crypto_service_session.c
index 8aa9798..6da1483 100644
--- a/library/spdm_common_lib/crypto_service_session.c
+++ b/library/spdm_common_lib/crypto_service_session.c
@@ -28,7 +28,7 @@ boolean spdm_calculate_th_for_exchange(
 	uint8 cert_chain_data_hash[MAX_HASH_SIZE];
 	uint32 hash_size;
 	return_status status;
-	large_managed_buffer_t th_curr;
+	static large_managed_buffer_t th_curr;
 
 	spdm_context = context;
 	session_info = spdm_session_info;
@@ -115,7 +115,7 @@ boolean spdm_calculate_th_for_finish(IN void *context,
 	uint8 MutCertChainDataHash[MAX_HASH_SIZE];
 	uint32 hash_size;
 	return_status status;
-	large_managed_buffer_t th_curr;
+	static large_managed_buffer_t th_curr;
 
 	spdm_context = context;
 	session_info = spdm_session_info;
@@ -223,7 +223,7 @@ spdm_generate_key_exchange_rsp_signature(IN spdm_context_t *spdm_context,
 	boolean result;
 	uintn signature_size;
 	uint32 hash_size;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	signature_size = spdm_get_asym_signature_size(
@@ -283,7 +283,7 @@ spdm_generate_key_exchange_rsp_hmac(IN spdm_context_t *spdm_context,
 	uint8 *cert_chain_data;
 	uintn cert_chain_data_size;
 	uint32 hash_size;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 	boolean result;
 
@@ -339,7 +339,7 @@ boolean spdm_verify_key_exchange_rsp_signature(
 	uint8 *cert_buffer;
 	uintn cert_buffer_size;
 	void *context;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -424,7 +424,7 @@ boolean spdm_verify_key_exchange_rsp_hmac(IN spdm_context_t *spdm_context,
 	uint8 *cert_chain_data;
 	uintn cert_chain_data_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -484,7 +484,7 @@ boolean spdm_generate_finish_req_signature(IN spdm_context_t *spdm_context,
 	boolean result;
 	uintn signature_size;
 	uint32 hash_size;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	signature_size = spdm_get_req_asym_signature_size(
@@ -555,7 +555,7 @@ boolean spdm_generate_finish_req_hmac(IN spdm_context_t *spdm_context,
 	uint8 *mut_cert_chain_data;
 	uintn mut_cert_chain_data_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -626,7 +626,7 @@ boolean spdm_verify_finish_req_signature(IN spdm_context_t *spdm_context,
 	uint8 *mut_cert_buffer;
 	uintn mut_cert_buffer_size;
 	void *context;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -721,7 +721,7 @@ boolean spdm_verify_finish_req_hmac(IN spdm_context_t *spdm_context,
 	uintn mut_cert_chain_data_size;
 	uintn hash_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -791,7 +791,7 @@ boolean spdm_generate_finish_rsp_hmac(IN spdm_context_t *spdm_context,
 	uintn mut_cert_chain_data_size;
 	uint32 hash_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -858,7 +858,7 @@ boolean spdm_verify_finish_rsp_hmac(IN spdm_context_t *spdm_context,
 	uint8 *mut_cert_chain_data;
 	uintn mut_cert_chain_data_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -926,7 +926,7 @@ spdm_generate_psk_exchange_rsp_hmac(IN spdm_context_t *spdm_context,
 	uint8 hmac_data[MAX_HASH_SIZE];
 	uint32 hash_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -971,7 +971,7 @@ boolean spdm_verify_psk_exchange_rsp_hmac(IN spdm_context_t *spdm_context,
 	uintn hash_size;
 	uint8 calc_hmac_data[MAX_HASH_SIZE];
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -1021,7 +1021,7 @@ spdm_generate_psk_exchange_req_hmac(IN spdm_context_t *spdm_context,
 	uintn hash_size;
 	uint8 calc_hmac_data[MAX_HASH_SIZE];
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -1065,7 +1065,7 @@ boolean spdm_verify_psk_finish_req_hmac(IN spdm_context_t *spdm_context,
 	uint8 hmac_data[MAX_HASH_SIZE];
 	uint32 hash_size;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	hash_size = spdm_get_hash_size(
@@ -1117,7 +1117,7 @@ return_status spdm_calculate_th1_hash(IN void *context,
 	uintn cert_chain_data_size;
 	spdm_session_info_t *session_info;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	spdm_context = context;
@@ -1187,7 +1187,7 @@ return_status spdm_calculate_th2_hash(IN void *context,
 	uintn mut_cert_chain_data_size;
 	spdm_session_info_t *session_info;
 	boolean result;
-	uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 th_curr_data[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn th_curr_data_size;
 
 	spdm_context = context;
diff --git a/library/spdm_requester_lib/challenge.c b/library/spdm_requester_lib/challenge.c
index 2a10610..3343d5e 100644
--- a/library/spdm_requester_lib/challenge.c
+++ b/library/spdm_requester_lib/challenge.c
@@ -45,7 +45,7 @@ return_status try_spdm_challenge(IN void *context, IN uint8 slot_id,
 	return_status status;
 	boolean result;
 	spdm_challenge_request_t spdm_request;
-	spdm_challenge_auth_response_max_t spdm_response;
+	static spdm_challenge_auth_response_max_t spdm_response;
 	uintn spdm_response_size;
 	uint8 *ptr;
 	void *cert_chain_hash;
diff --git a/library/spdm_requester_lib/encap_request.c b/library/spdm_requester_lib/encap_request.c
index 30bbd06..7073b0b 100644
--- a/library/spdm_requester_lib/encap_request.c
+++ b/library/spdm_requester_lib/encap_request.c
@@ -141,13 +141,13 @@ return_status spdm_encapsulated_request(IN spdm_context_t *spdm_context,
 					OUT uint8 *req_slot_id_param)
 {
 	return_status status;
-	uint8 request[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 request[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn spdm_request_size;
 	spdm_get_encapsulated_request_request_t
 		*spdm_get_encapsulated_request_request;
 	spdm_deliver_encapsulated_response_request_t
 		*spdm_deliver_encapsulated_response_request;
-	uint8 response[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 response[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn spdm_response_size;
 	spdm_encapsulated_request_response_t *spdm_encapsulated_request_response;
 	spdm_encapsulated_response_ack_response_t
diff --git a/library/spdm_requester_lib/get_certificate.c b/library/spdm_requester_lib/get_certificate.c
index 8629c33..8f8e51d 100644
--- a/library/spdm_requester_lib/get_certificate.c
+++ b/library/spdm_requester_lib/get_certificate.c
@@ -46,9 +46,9 @@ return_status try_spdm_get_certificate(IN void *context, IN uint8 slot_id,
 	boolean result;
 	return_status status;
 	spdm_get_certificate_request_t spdm_request;
-	spdm_certificate_response_max_t spdm_response;
+	static spdm_certificate_response_max_t spdm_response;
 	uintn spdm_response_size;
-	large_managed_buffer_t certificate_chain_buffer;
+	static large_managed_buffer_t certificate_chain_buffer;
 	spdm_context_t *spdm_context;
 
 	spdm_context = context;
diff --git a/library/spdm_requester_lib/key_exchange.c b/library/spdm_requester_lib/key_exchange.c
index d8732ad..c35e8b6 100644
--- a/library/spdm_requester_lib/key_exchange.c
+++ b/library/spdm_requester_lib/key_exchange.c
@@ -55,9 +55,9 @@ return_status try_spdm_send_receive_key_exchange(
 {
 	boolean result;
 	return_status status;
-	spdm_key_exchange_request_mine_t spdm_request;
+	static spdm_key_exchange_request_mine_t spdm_request;
 	uintn spdm_request_size;
-	spdm_key_exchange_response_max_t spdm_response;
+	static spdm_key_exchange_response_max_t spdm_response;
 	uintn spdm_response_size;
 	uintn dhe_key_size;
 	uint32 measurement_summary_hash_size;
diff --git a/library/spdm_requester_lib/send_receive.c b/library/spdm_requester_lib/send_receive.c
index 6338a9a..e0b9f1e 100644
--- a/library/spdm_requester_lib/send_receive.c
+++ b/library/spdm_requester_lib/send_receive.c
@@ -28,7 +28,7 @@ return_status spdm_send_request(IN void *context, IN uint32 *session_id,
 {
 	spdm_context_t *spdm_context;
 	return_status status;
-	uint8 message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn message_size;
 
 	spdm_context = context;
@@ -80,7 +80,7 @@ return_status spdm_receive_response(IN void *context, IN uint32 *session_id,
 {
 	spdm_context_t *spdm_context;
 	return_status status;
-	uint8 message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn message_size;
 	uint32 *message_session_id;
 	boolean is_message_app_message;
diff --git a/library/spdm_responder_lib/communication.c b/library/spdm_responder_lib/communication.c
index e9e82ec..42988a1 100644
--- a/library/spdm_responder_lib/communication.c
+++ b/library/spdm_responder_lib/communication.c
@@ -75,9 +75,9 @@ return_status spdm_responder_dispatch_message(IN void *context)
 {
 	return_status status;
 	spdm_context_t *spdm_context;
-	uint8 request[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 request[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn request_size;
-	uint8 response[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 response[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn response_size;
 	uint32 *session_id;
 
diff --git a/library/spdm_responder_lib/receive_send.c b/library/spdm_responder_lib/receive_send.c
index 0a9d31a..c08118c 100644
--- a/library/spdm_responder_lib/receive_send.c
+++ b/library/spdm_responder_lib/receive_send.c
@@ -274,7 +274,7 @@ return_status spdm_build_response(IN void *context, IN uint32 *session_id,
 				  OUT void *response)
 {
 	spdm_context_t *spdm_context;
-	uint8 my_response[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 my_response[MAX_SPDM_MESSAGE_BUFFER_SIZE*1];
 	uintn my_response_size;
 	return_status status;
 	spdm_get_spdm_response_func get_response_func;
diff --git a/library/spdm_secured_message_lib/encode_decode.c b/library/spdm_secured_message_lib/encode_decode.c
index c14e9b6..ce9988d 100644
--- a/library/spdm_secured_message_lib/encode_decode.c
+++ b/library/spdm_secured_message_lib/encode_decode.c
@@ -318,7 +318,7 @@ return_status spdm_decode_secured_message(
 	spdm_session_type_t session_type;
 	spdm_session_state_t session_state;
 	spdm_error_struct_t spdm_error;
-	uint8 dec_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 dec_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 
 	spdm_error.error_code = 0;
 	spdm_error.session_id = 0;
diff --git a/library/spdm_transport_mctp_lib/common.c b/library/spdm_transport_mctp_lib/common.c
index 38cd1ba..3fa65b8 100644
--- a/library/spdm_transport_mctp_lib/common.c
+++ b/library/spdm_transport_mctp_lib/common.c
@@ -113,10 +113,10 @@ return_status spdm_transport_mctp_encode_message(
 {
 	return_status status;
 	transport_encode_message_func transport_encode_message;
-	uint8 app_message_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 app_message_buffer[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	void *app_message;
 	uintn app_message_size;
-	uint8 secured_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 secured_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn secured_message_size;
 	spdm_secured_message_callbacks_t spdm_secured_message_callbacks_t;
 	void *secured_message_context;
@@ -230,9 +230,9 @@ return_status spdm_transport_mctp_decode_message(
 	return_status status;
 	transport_decode_message_func transport_decode_message;
 	uint32 *SecuredMessageSessionId;
-	uint8 secured_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 secured_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn secured_message_size;
-	uint8 app_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
+	static uint8 app_message[MAX_SPDM_MESSAGE_BUFFER_SIZE];
 	uintn app_message_size;
 	spdm_secured_message_callbacks_t spdm_secured_message_callbacks_t;
 	void *secured_message_context;
-- 
2.17.5

